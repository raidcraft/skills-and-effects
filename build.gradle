buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'io.freefair.lombok' version '5.3.0' apply false
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

sourceCompatibility = 11
targetCompatibility = 11

configure (subprojects - project(':modules')) {

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'jacoco'
    apply plugin: 'io.freefair.lombok'

    apply from: "$rootDir/gradle/jacoco.gradle"
    apply from: "$rootDir/gradle/publish.gradle"

    if (project.hasProperty("local_script")) {
        apply from: file(local_script + "/build.local.gradle")
    }

    sourceCompatibility = 11
    targetCompatibility = 11

    ext {
        mcVersion = project.property("mcVersion")
        pluginName = project.name
    }

    group project.property("group")

    compileJava {
        options.encoding = 'UTF-8'
        options.compilerArgs += ["-parameters"]
        options.fork = true
        options.forkOptions.executable = 'javac'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url = 'https://jitpack.io' }
        maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
        maven { url = "https://repo.aikar.co/content/groups/aikar/" }
        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven {
            url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
        }
    }

    dependencies {
        implementation "org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT"

        implementation 'de.raidcraft:rcskills:2.3.2'

        testImplementation 'de.raidcraft:rcskills-test:2.0.0'

        testImplementation 'org.junit.jupiter:junit-jupiter:5.+'
        testImplementation "org.mockito:mockito-core:3.+"
        testImplementation 'org.assertj:assertj-core:3.+'
        testImplementation 'com.github.seeseemelk:MockBukkit-v1.16:0.20.0'
        testImplementation 'org.jmockit:jmockit:1.49'
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
        ignoreFailures = false
    }

    processResources {
        project.properties.put("version", this.version)
        expand project.properties
    }

    defaultTasks 'build'
}

def projects = []
new File(rootDir, 'modules').listFiles().each {
    if (it.directory && new File(it, 'build.gradle').exists()) {
        projects += "modules:${it.name}"
    }
}

apply from: "$rootDir/gradle/publish.gradle"

task oneJar( type: Jar , dependsOn: projects.collect{ it+":compileJava"}) {
    baseName = "all-skills-and-effects"
    from files(projects.collect{ project(it).sourceSets.main.output })
}

tasks.build.dependsOn(oneJar)
tasks.publish.dependsOn(oneJar)

if (project.hasProperty("local_script")) {
    apply from: file(local_script + "/build.local.gradle")
}